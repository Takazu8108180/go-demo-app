// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/takazu8108180/go-demo-app/ent/article"
	"github.com/takazu8108180/go-demo-app/ent/comment"
	"github.com/takazu8108180/go-demo-app/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescTitle is the schema descriptor for title field.
	articleDescTitle := articleFields[1].Descriptor()
	// article.DefaultTitle holds the default value on creation for the title field.
	article.DefaultTitle = articleDescTitle.Default.(string)
	// article.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	article.TitleValidator = articleDescTitle.Validators[0].(func(string) error)
	// articleDescContents is the schema descriptor for contents field.
	articleDescContents := articleFields[2].Descriptor()
	// article.DefaultContents holds the default value on creation for the contents field.
	article.DefaultContents = articleDescContents.Default.(string)
	// articleDescUsername is the schema descriptor for username field.
	articleDescUsername := articleFields[3].Descriptor()
	// article.DefaultUsername holds the default value on creation for the username field.
	article.DefaultUsername = articleDescUsername.Default.(string)
	// article.UsernameValidator is a validator for the "username" field. It is called by the builders before save.
	article.UsernameValidator = articleDescUsername.Validators[0].(func(string) error)
	// articleDescNice is the schema descriptor for nice field.
	articleDescNice := articleFields[4].Descriptor()
	// article.NiceValidator is a validator for the "nice" field. It is called by the builders before save.
	article.NiceValidator = articleDescNice.Validators[0].(func(int) error)
	// articleDescCreatedAt is the schema descriptor for created_at field.
	articleDescCreatedAt := articleFields[5].Descriptor()
	// article.DefaultCreatedAt holds the default value on creation for the created_at field.
	article.DefaultCreatedAt = articleDescCreatedAt.Default.(func() time.Time)
	// articleDescID is the schema descriptor for id field.
	articleDescID := articleFields[0].Descriptor()
	// article.DefaultID holds the default value on creation for the id field.
	article.DefaultID = articleDescID.Default.(func() uuid.UUID)
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescMessage is the schema descriptor for message field.
	commentDescMessage := commentFields[1].Descriptor()
	// comment.DefaultMessage holds the default value on creation for the message field.
	comment.DefaultMessage = commentDescMessage.Default.(string)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentFields[2].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescID is the schema descriptor for id field.
	commentDescID := commentFields[0].Descriptor()
	// comment.DefaultID holds the default value on creation for the id field.
	comment.DefaultID = commentDescID.Default.(func() uuid.UUID)
}
